==========
bashの文法
==========

.. highlight:: console

Tips
====

パイプの左側がエラーなら全体をエラーとする
------------------------------------------

``pipefail`` をセットしておく::

	$ set -o pipefail
	$ curl http://example.com/notfound.json | jq .

組み込みコマンド
================

trap
----

``trap`` は、``SIGINT``, ``SIGHUP`` などの他に以下の議事シグナルが存在する。

``ERR``
	コマンド実行したとき結果がエラーならその都度実行されるハンドラ

``EXIT``
	コマンドを終了したときに実行されるハンドラ

``DEBUG``
	コマンド実行のたびに都度実行されるハンドラ

一時ファイルを必ず削除したい場合は ``EXIT`` に登録しておくと良い。
他のシグナルは ``trap -l`` でリスト表示できる。

変数展開
========

bashは通常のshと比べてとても多くの展開式が使える。

変数置換
--------

========== ===================================
書き方     意味
========== ===================================
${v:-text} vが未定義ならtextに置換
${v:=text} vが未定義ならtextをセットして置換
${v:?text} vが未定義ならtextを表示して終了
${v:+text} vが **定義されていたら** textに置換
========== ===================================

====== ======================================
書き方 意味
====== ======================================
${#v}  文字列の長さ、または配列の要素数に展開
${!v}  vの値を変数名として展開
====== ======================================

文字列置換
----------

=========== ===================================
書き方      意味
=========== ===================================
${v%glob}   vの末尾から最短マッチした部分を削除
${v%%glob}  vの末尾から最長マッチした部分を削除
${v#glob}   vの先頭から最短マッチした部分を削除
${v##glob}  vの先頭から最長マッチした部分を削除
${v/s1/s2}  vに含まれるs1を1つだけs2に置換
${v//s1/s2} vに含まれるs1を全てs2に置換
=========== ===================================

bash 4以降から利用可能な式
--------------------------

便利な式だけど、macOS High Sierraはまだ3系なので利用箇所には注意。

======= ==============================
書き方  意味
======= ==============================
${v^}   先頭の文字を大文字にして展開
${v^^}  全ての文字を大文字にして展開
${v,}   先頭の文字を小文字にして展開
${v,,}  全ての文字を小文字にして展開
${v~}   先頭文字の大文字小文字を反転
${v~~}  全ての文字で大文字小文字を反転
======= ==============================
