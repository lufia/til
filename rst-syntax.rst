=========================
reStructuredTextの書き方
=========================

インライン
==========

リンク
------

``\`...\`_`` でリンクを書く::

	`リンク <http://example.com/>`_

斜体
-----

``*...*`` で囲む::

	通常 *斜体* 通常

前後にスペースを入れないと認識しない。

太字
------

``**...**`` で囲む::

	通常 **太字** 通常

前後にスペースを入れないと認識しない。

コード片
--------

``\`\`...\`\```で囲む::

	通常 ``コード`` 通常

前後にスペースを入れないと認識しない。

そのまま文字として使いたい
--------------------------

\*や\`を文字として扱う場合は、バックスラッシュを置く::

	\\*テスト\\*

ヘッダ
======

TODO

リスト
======

順序なしリスト
--------------

``*`` の後にスペースを入れて開始する::

	* 項目1
		* ネスト1
	* 項目2

順序ありリスト
--------------

リストの頭に数字を入れる::

	1. 項目1
		1. ネスト
	2. 項目2

引用
------

直前の行から1行開けて、1つ深いインデントを行う。

	普通の文章。

		引用した文章

	普通の文章。

定義リスト
-----------

定義タイトルに続けて、インデントした内容を書く::

	タイトル1
		内容1

		内容2

	タイトル2
		内容1

タイトルと内容の間に空行を入れると、内容の部分が引用になるので注意。

コード
======

コードハイライト
-----------------

直前の行末を ``::`` にして、1行開けてインデントしたコードを書く。
ハイライトを入れたい場合は、2通りの書き方がある。

``.. highlight::`` は、次の ``.. highlight::`` が現れるまで有効::

	.. highlight:: c

	Plan 9のCコード::

		#include <u.h>
		#include <libc.h>

		void
		main(void)
		{
			print("hello, world\n");
			exits(nil);
		}

``.. code-block::`` の場合は、次の1つだけ有効::

	.. code-block:: bash

		echo $PATH

言語名はPygmentsに依存するらしい。

* `Available lexers <http://pygments.org/docs/lexers/>`_
